FILE(0,399)
  PsiElement(COMMENT)('/** This is a test file. Rules in it may be nonsensical for production use. */')(0,78)
  ASTWrapperPsiElement(RULE)(79,113)
    ASTWrapperPsiElement(COMMA_SEPARATED_LIST)(79,83)
      ASTWrapperPsiElement(SELECTOR)(79,83)
        ASTWrapperPsiElement(SUB_SELECTOR)(79,83)
          ASTWrapperPsiElement(OBJECT)(79,83)
            PsiElement(meta)('meta')(79,83)
    ASTWrapperPsiElement(DECLARATIONS)(84,113)
      ASTWrapperPsiElement(DECLARATION)(84,113)
        PsiElement({)('{')(84,85)
        ASTWrapperPsiElement(STYLESET)(90,111)
          ASTWrapperPsiElement(SEMI_COLON_SEPARATED_LIST)(90,111)
            ASTWrapperPsiElement(STYLE)(90,110)
              PsiElement(IDENT)('title')(90,95)
              PsiElement(:)(':')(95,96)
              ASTWrapperPsiElement(SPECIFIER)(97,110)
                PsiElement(STRING)('"Test MapCSS"')(97,110)
            PsiElement(;)(';')(110,111)
        PsiElement(})('}')(112,113)
  PsiElement(COMMENT)('/** This is a multi-line comment\n  * just to ensure that it ends where it should\n  */')(114,199)
  ASTWrapperPsiElement(RULE)(200,274)
    ASTWrapperPsiElement(COMMA_SEPARATED_LIST)(200,211)
      ASTWrapperPsiElement(SELECTOR)(200,211)
        ASTWrapperPsiElement(SUB_SELECTOR)(200,211)
          ASTWrapperPsiElement(OBJECT)(200,201)
            PsiElement(*)('*')(200,201)
          ASTWrapperPsiElement(TESTS)(201,211)
            ASTWrapperPsiElement(TEST)(201,211)
              PsiElement([)('[')(201,202)
              ASTWrapperPsiElement(CONDITION)(202,210)
                PsiElement(node)('node')(202,206)
                ASTWrapperPsiElement(BINARY)(206,207)
                  PsiElement(=)('=')(206,207)
                ASTWrapperPsiElement(SPECIFIER)(207,210)
                  PsiElement(way)('way')(207,210)
              PsiElement(])(']')(210,211)
    ASTWrapperPsiElement(DECLARATIONS)(212,274)
      ASTWrapperPsiElement(DECLARATION)(212,274)
        PsiElement({)('{')(212,213)
        ASTWrapperPsiElement(STYLESET)(218,272)
          ASTWrapperPsiElement(SEMI_COLON_SEPARATED_LIST)(218,272)
            ASTWrapperPsiElement(STYLE)(218,271)
              PsiElement(IDENT)('text')(218,222)
              PsiElement(:)(':')(222,223)
              ASTWrapperPsiElement(SPECIFIER)(224,271)
                ASTWrapperPsiElement(FUNCTION)(224,271)
                  PsiElement(IDENT)('tr')(224,226)
                  PsiElement(()('(')(226,227)
                  ASTWrapperPsiElement(COMMA_SEPARATED_LIST)(227,270)
                    PsiElement(STRING)('"Check that node=way is detected as a test"')(227,270)
                  PsiElement())(')')(270,271)
            PsiElement(;)(';')(271,272)
        PsiElement(})('}')(273,274)
  ASTWrapperPsiElement(RULE)(276,311)
    ASTWrapperPsiElement(COMMA_SEPARATED_LIST)(276,307)
      ASTWrapperPsiElement(SELECTOR)(276,307)
        ASTWrapperPsiElement(SUB_SELECTOR)(276,307)
          ASTWrapperPsiElement(OBJECT)(276,280)
            PsiElement(node)('node')(276,280)
          ASTWrapperPsiElement(TESTS)(280,298)
            ASTWrapperPsiElement(TEST)(280,298)
              PsiElement([)('[')(280,281)
              ASTWrapperPsiElement(CONDITION)(281,297)
                PsiElement(IDENT)('highway')(281,288)
                ASTWrapperPsiElement(BINARY)(288,289)
                  PsiElement(=)('=')(288,289)
                ASTWrapperPsiElement(SPECIFIER)(289,297)
                  PsiElement(IDENT)('crossing')(289,297)
              PsiElement(])(']')(297,298)
          ASTWrapperPsiElement(LAYER)(298,307)
            PsiElement(::)('::')(298,300)
            PsiElement(IDENT)('layer_1')(300,307)
    ASTWrapperPsiElement(DECLARATIONS)(308,311)
      ASTWrapperPsiElement(DECLARATION)(308,311)
        PsiElement({)('{')(308,309)
        PsiElement(})('}')(310,311)
  ASTWrapperPsiElement(RULE)(313,399)
    ASTWrapperPsiElement(COMMA_SEPARATED_LIST)(313,361)
      ASTWrapperPsiElement(SELECTOR)(313,337)
        ASTWrapperPsiElement(SUB_SELECTOR)(313,337)
          ASTWrapperPsiElement(OBJECT)(313,316)
            PsiElement(way)('way')(313,316)
          ASTWrapperPsiElement(TESTS)(316,337)
            ASTWrapperPsiElement(TEST)(316,337)
              PsiElement([)('[')(316,317)
              ASTWrapperPsiElement(CONDITION)(317,336)
                PsiElement(IDENT)('highway')(317,324)
                ASTWrapperPsiElement(BINARY)(324,325)
                  PsiElement(=)('=')(324,325)
                ASTWrapperPsiElement(SPECIFIER)(325,336)
                  PsiElement(IDENT)('residential')(325,336)
              PsiElement(])(']')(336,337)
      PsiElement(,)(',')(337,338)
      ASTWrapperPsiElement(SELECTOR)(339,361)
        ASTWrapperPsiElement(SUB_SELECTOR)(339,361)
          ASTWrapperPsiElement(OBJECT)(339,342)
            PsiElement(way)('way')(339,342)
          ASTWrapperPsiElement(TESTS)(342,361)
            ASTWrapperPsiElement(TEST)(342,361)
              PsiElement([)('[')(342,343)
              ASTWrapperPsiElement(CONDITION)(343,360)
                PsiElement(IDENT)('highway')(343,350)
                ASTWrapperPsiElement(BINARY)(350,351)
                  PsiElement(=)('=')(350,351)
                ASTWrapperPsiElement(SPECIFIER)(351,360)
                  PsiElement(IDENT)('secondary')(351,360)
              PsiElement(])(']')(360,361)
    ASTWrapperPsiElement(DECLARATIONS)(362,399)
      ASTWrapperPsiElement(DECLARATION)(362,399)
        PsiElement({)('{')(362,363)
        ASTWrapperPsiElement(STYLESET)(368,397)
          ASTWrapperPsiElement(SEMI_COLON_SEPARATED_LIST)(368,397)
            ASTWrapperPsiElement(STYLE)(368,396)
              PsiElement(IDENT)('casing-color')(368,380)
              PsiElement(:)(':')(380,381)
              ASTWrapperPsiElement(SPECIFIER)(382,396)
                PsiElement(IDENT)('highway')(382,389)
                ASTWrapperPsiElement(COLOUR)(389,396)
                  PsiElement(HEXCOLOR)('#000000')(389,396)
            PsiElement(;)(';')(396,397)
        PsiElement(})('}')(398,399)
